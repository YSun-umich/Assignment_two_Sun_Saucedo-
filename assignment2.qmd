---
title: "Assignment 2 - Yao Sun & Valeria Castañeda Saucedo"
editor: visual
format: pdf
output: pdf
---

### Homework #2

You may work in pairs or individually for this assignment. Make sure you join a group in Canvas if you are working in pairs. Turn in this assignment as an HTML or PDF file to ELMS. Make sure to include the R Markdown or Quarto file that was used to generate it.

```{r}
#| message = FALSE
library(tidyverse)
library(gtrendsR)
library(censusapi)
library(dplyr)
```

In this assignment, you will pull from APIs to get data from various data sources and use your data wrangling skills to use them all together. You should turn in a report in PDF or HTML format that addresses all of the questions in this assignment, and describes the data that you pulled and analyzed. You do not need to include full introduction and conclusion sections like a full report, but you should make sure to answer the questions in paragraph form, and include all relevant tables and graphics.

Whenever possible, use piping and `dplyr`. Avoid hard-coding any numbers within the report as much as possible.

### Part One
### Pulling from APIs

Our first data source is the Google Trends API. Suppose we are interested in the search trends for `crime` and `loans` in Illinois in the year 2020. We could find this using the following code:

```{r}
res <- gtrends(c("crime", "loans"), 
               geo = "US-IL", 
               time = "2020-01-01 2020-12-31", 
               low_search_volume = TRUE)
plot(res)

interest_by_city <- res$interest_by_city
interest_by_dma <- res$interest_by_dma
interest_overtime <- res$interest_over_time
```

```{r}
res$interest_over_time %>%
  na.omit() %>%
  group_by(keyword)%>%
summarize(
 kch_iotmean=mean(hits),
 kch_iotmedian=median(hits),
 kch_iotvar=var(hits))

res$interest_by_city %>%
  na.omit() %>%
  group_by(keyword)%>%
summarize(
 kch_ibcmean=mean(hits),
 kch_ibcmedian=median(hits),
 kch_ibcvar=var(hits))

res$interest_by_dma %>%
  na.omit() %>%
  group_by(keyword)%>%
summarize(
 kch_ibdmean=mean(hits),
 kch_ibdmedian=median(hits),
 kch_ibdvar=var(hits))
```

### Answer the following questions for the keywords "crime" and "loans".

-   Find the mean, median and variance of the search hits for the keywords.

  Answer:  Within the data set interest over time, we found that the mean search hits for the keyword “crime” was 51.92 hits, the median search hits for the keyword “crime” was 52 hits, and the variance search hits for the keyword “crime” was 64.30. Additionally, within this data set we found that the average amount of hits for keyword “loan” was 63.62, the median amount of hits for keyword “loan” was 61 hits, and the variance amount of hits for keyword “loan” was
108.00.

  Within the data set interest by city, we found that the mean search hits for the keyword “crime” was 68.21, the median search hits for the keyword “crime” was 63 hits, and the variance search hits for the keyword “crime” 141.10. Additionally, within this data set we found that the average amount of hits for keyword “loan” was 67.26, the median amount of hits for keyword “loan” was 64 hits, and the variance amount of hits for keyword “loan” was 112.31.

  Within the data set interest by dma, we found that the mean search hits for the keyword “crime” was 88.4 hits, the median search hits for the keyword “crime” was 89.5 hits, and the variance search hits for the keyword “crime” was 72.27. Additionally, within this data set we found that the average amount of hits for keyword “loan” was 85.3, the median amount of hits for keyword “loan” was 83.0 hits, and the variance amount of hits for keyword “loan” was 86.90.

### Which cities (locations) have the highest search frequency for `loans`? Note that there might be multiple rows for each city if there were hits for both "crime" and "loans" in that city. It might be easier to answer this question if we had the search hits info for both search terms in two separate variables. That is, each row would represent a unique city.

```{r}
revised_data <- res$interest_by_city %>%
  na.omit() %>%
  filter(keyword == "loans")%>%
mutate(frequency = hits/sum(hits))%>%
         select(location,frequency) %>%
   arrange(desc(frequency))
  crime_data <- res$interest_by_city %>%
  na.omit() %>%
  filter(keyword == "crime")%>%
mutate(frequency = hits/sum(hits)) %>%
select(location,frequency)%>%
 arrange(desc(frequency))

revised_data
crime_data
```

  Answer: The city with the highest search frequency for “loans” is Evergreen Park.

### Is there a relationship between the search intensities between the two keywords we used?

```{r}
ggplot(revised_data, aes( x = reorder(location, -frequency), y = frequency))+
     geom_bar(stat = "identity", fill = "hotpink") +
     theme_minimal() +
     theme(axis.text.x = element_text (angle = 90, hjust = 1))

ggplot(crime_data, aes( x = reorder(location, -frequency), y = frequency))+
  geom_bar(stat = "identity", fill = "blue") +
  theme_minimal() +
  theme(axis.text.x = element_text (angle = 90, hjust = 1))
```

```{r}
 loan_h <- res$interest_over_time %>%
    filter(keyword == "loans") %>%
    pull(hits)
loan_h

 crime_h <- res$interest_over_time %>%
    filter(keyword == "crime") %>%
    pull(hits)
crime_h

cor(loan_h, crime_h)
```

  Answer: There is a negative correlation between the words we used.

### Repeat the above for keywords related to covid. Make sure you use multiple keywords like we did above. Try several different combinations and think carefully about words that might make sense within this context.

```{r}
res_vaccine <- gtrends(c("death", "vaccine"), 
               geo = "US-IL", 
               time = "2020-01-01 2020-12-31", 
               low_search_volume = TRUE)
plot(res_vaccine)

vaccine_interest_overtime <- res_vaccine$interest_over_time
vaccine_interest_bycity <- res_vaccine$interest_by_city
vaccine_interest_bydma <- res_vaccine$interest_by_dma
```

```{r}
vaccine_interest_overtime %>%
  na.omit() %>%
  group_by(keyword)%>%
summarize(
 kch_iotmean=mean(hits),
 kch_iotmedian=median(hits),
 kch_iotvar=var(hits))

vaccine_interest_bydma %>%
  na.omit() %>%
  group_by(keyword)%>%
summarize(
 kch_ibcmean=mean(hits),
 kch_ibcmedian=median(hits),
 kch_ibcvar=var(hits))

vaccine_interest_bycity %>%
  na.omit() %>%
  group_by(keyword)%>%
summarize(
 kch_ibdmean=mean(hits),
 kch_ibdmedian=median(hits),
 kch_ibdvar=var(hits))
```

  Answer: Within the data set vaccine interest over time, we found that the mean search hits for the keyword “death” was 58.43 hits, the median search hits for the keyword “death” was 55 hits, and the variance search hits for the keyword “death” was 137.135. Additionally, within this data set we found that the average amount of hits for keyword “vaccine” was 19.60, the median
amount of hits for keyword “vaccine” was 15 hits, and the variance amount of hits for keyword “vaccine” was 339.09.

  Within the data set interest by city, we found that the mean search hits for the keyword “death” was 63.81, the median search hits for the keyword “death” was 60 hits, and the variance search hits for the keyword “death” 92.72. Additionally, within this data set we found that the average amount of hits for keyword “vaccine” was 35.03, the median amount of hits for keyword “vaccine” was 33 hits, and the variance amount of hits for keyword “vaccine” was 86.18.
  
  Within the data set vaccine interest by dma, we found that the mean search hits for the keyword “death” was 97.3 hits, the median search hits for the keyword “death” was 97.5 hits, and the variance search hits for the keyword “death” was 4.01. Additionally, within this data set we found that the average amount of hits for keyword “vaccine” was 79.7, the median amount of hits for keyword “vaccine” was 77.5 hits, and the variance amount of hits for keyword “vaccine”
was 108.90.

```{r}
drevised_data <- vaccine_interest_bycity %>%
    na.omit() %>%
    filter(keyword == "death")%>%
  mutate(frequency = hits/sum(hits))%>%
        select(location,frequency) %>%
        arrange(desc(frequency))
vrevised_data <- vaccine_interest_bycity %>%
    na.omit() %>%
    filter(keyword == "vaccine")%>%
  mutate(frequency = hits/sum(hits)) %>%
  select(location,frequency) %>%
        arrange(desc(frequency))

drevised_data
vrevised_data
```

### Is there a relationship between the search intensities between the "death" and "vaccine"?

```{r}
 ggplot(drevised_data, aes( x = reorder(location, -frequency), y = frequency))+
     geom_bar(stat = "identity", fill = "darkgreen") +
     theme_minimal() +
     theme(axis.text.x = element_text (angle = 90, hjust = 1, size=8))

ggplot(vrevised_data, aes( x = reorder(location, -frequency), y = frequency))+
  geom_bar(stat = "identity", fill = "darkorange") +
  theme_minimal() +
  theme(axis.text.x = element_text (angle = 90, hjust = 1, size = 5))
```

```{r}
death_h <- vaccine_interest_overtime %>%
    filter(keyword == "death") %>%
    pull(hits)
death_h

vaccine_h <- vaccine_interest_overtime %>%
    filter(keyword == "vaccine") %>%
    pull(hits)
vaccine_h

 cor(death_h, vaccine_h)
```

  Answer: There is a negative correlation between the words we used.

### Part Two
### Google Trends + ACS

Now lets add another data set. The `censusapi` package provides a nice R interface for communicating with this API. However, before running queries we need an access key. This (easy) process can be completed here:

<https://api.census.gov/data/key_signup.html>

Once you have an access key, save it as a text file, then read this key in the `cs_key` object. We will use this object in all following API queries. Note that I called my text file `census-key.txt` -- yours might be different!

```{r}
cs_key <- read_file("../census-key.txt")
```

In the following, we request basic socio-demographic information (population, median age, median household income, income per capita) for cities and villages in the state of Illinois. Documentation for the 5-year ACS API can be found here: <https://www.census.gov/data/developers/data-sets/acs-5year.html>. The information about the variables used here can be found here: <https://api.census.gov/data/2022/acs/acs5/variables.html>.

```{r}
acs_il <- getCensus(name = "acs/acs5",
                    vintage = 2020, 
                    vars = c("NAME", 
                             "B01001_001E", 
                             "B06002_001E", 
                             "B19013_001E", # Median household income in the past 12 months 
                             "B19301_001E" # Per capita income in the past 12 months
                             ), 
                    region = "place:*", 
                    regionin = "state:17",
                    key = cs_key)
head(acs_il)
```

Convert values that represent missings to NAs.

```{r}
acs_il[acs_il == -666666666] <- NA
```

Now, it might be useful to rename the socio-demographic variables (`B01001_001E` etc.) in our data set and assign more meaningful names.

```{r}
acs_il <-
  acs_il %>%
  rename(pop = B01001_001E, 
         age = B06002_001E, 
         hh_income = B19013_001E, 
         income = B19301_001E)

```

It seems like we could try to use this location information listed above to merge this data set with the Google Trends data. However, we first have to clean `NAME` so that it has the same structure as `location` in the search interest by city data. Add a new variable `location` to the ACS data that only includes city names.

```{r}
acs_il$location <- acs_il$NAME

acs_il$location <- sapply(strsplit(as.character(acs_il$location), ","), '[', 1)

acs_il$location <- gsub("\\s+(village|city|town|CDP)$", "", acs_il$location)

acs_il <- acs_il %>% select(-NAME)
```

Answer the following questions with the "crime" and "loans" Google trends data and the ACS data.

-   First, check how many cities don't appear in both data sets, i.e. cannot be matched. Then, create a new data set by joining the Google Trends and the ACS data. Keep only cities that appear in both data sets.

```{r}
acs_unique_locations <- unique(acs_il$location)
    
google_unique_locations <- unique(interest_by_city$location)

nonmatching <- setdiff(acs_unique_locations, google_unique_locations)

length(nonmatching)
```

   Answer: There are 1122 cities that don't appear in both data sets. 
```{r}
# creating new data set by merging previous two
joining_data <- inner_join(acs_il, 
interest_by_city, by="location")
```

-   Compute the mean of the search popularity for both keywords for cities that have an above average median household income and for those that have an below average median household income. When building your pipe, start with creating the grouping variable and then proceed with the remaining tasks. What conclusions might you draw from this?

```{r}
mean_popularity <- joining_data %>% mutate(
  income = ifelse(hh_income > mean(hh_income, na.rm = TRUE), "higher than average", "lower than average")) %>% 
  group_by(income, keyword) %>% 
  summarise(mean_hits = mean(hits, na.rm = TRUE), .groups='drop')

mean_popularity
```

  Answer: The mean of the search popularity for "crime" for cities that have an above average median household income is 58, the mean of the search popularity for "loan" for those cities is 65.2.
  The mean of the search popularity for "crime" for cities that have an below average median household income is 64.6, the mean of the search popularity for "loan" for those cities is 64.

-   Is there a relationship between the median household income and the search popularity of the Google trends terms? Describe the relationship and use a scatterplot with `qplot()`.

```{r}
income_hits <- joining_data %>%
  na.omit() %>%
  select(
    location, hh_income, hits
  )
  
qplot(hh_income, hits, data = income_hits) + 
  labs(title = "Relationship between Median Household Income and Keyword Search Popularity",
             x = "Median Household Income",
             y = "Keyword Search Popularity")

```

  Answer: We can't observe a clear relationship between median household income and keyword search popularity. The data points appear to be randomly distributed, with most keyword popularities clustering between 55 and 75, although there are two outliers at the end of the popularity-axis. 

### Repeat the above steps using the covid data and the ACS data.

First, we use the location information to merge the COVID data set with the Google Trends data, and then we answer the following questions with the "death" and "vaccine" Google trends data and the ACS data.

-   First, check how many cities don't appear in both data sets, i.e. cannot be matched. Then, create a new data set by joining the Google Trends and the ACS data. Keep only cities that appear in both data sets.

```{r}
covid_unique_locations <- unique(vaccine_interest_bycity$location)

nonmatching <- setdiff(acs_unique_locations, google_unique_locations)

length(nonmatching)
```

 Answer: There are 1122 cities that don't appear in both data sets. 

```{r}
# creating new data set by merging previous two data sets
covid_joining_data <- inner_join(acs_il, 
vaccine_interest_bycity, by="location")
```

-   Compute the mean of the search popularity for both keywords for cities that have an above average median household income and for those that have an below average median household income. When building your pipe, start with creating the grouping variable and then proceed with the remaining tasks. What conclusions might you draw from this?

```{r}
covid_mean_popularity <- covid_joining_data %>% mutate(
  income = ifelse(hh_income > mean(hh_income, na.rm = TRUE), "higher than average", "lower than average")) %>% 
  group_by(income, keyword) %>% 
  summarise(mean_hits = mean(hits, na.rm = TRUE), .groups='drop')

covid_mean_popularity
```

  Answer: The mean of the search popularity for "death" for cities that have an above average median household income is 63.1, the mean of the search popularity for "vaccine" for those cities is 37.1.
  The mean of the search popularity for "death" for cities that have an below average median household income is 70, the mean of the search popularity for "vaccine" for those cities is 40.7.

-   Is there a relationship between the median household income and the search popularity of the Google trends terms? Describe the relationship and use a scatterplot with `qplot()`.

```{r}
covid_income_hits <- covid_joining_data %>%
  na.omit() %>%
  select(
    location, hh_income, hits
  )
  
qplot(hh_income, hits, data = covid_income_hits) + 
  labs(title = "Relationship between Median Household Income and Keyword Search Popularity",
             x = "Median Household Income",
             y = "Keyword Search Popularity")

```

  Answer: We can't observe a clear relationship between median household income and keyword search popularity. Most keyword popularities are around or below 40, that are associated with median household incomes ranging from 50,000 to 200,000. Within this income range, there are some keyword popularities above 60, and three that exceed 80. However, these observations do not suggest a meaningful relationship.

